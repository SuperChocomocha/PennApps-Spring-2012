Signup and PricingExplore GitHubFeaturesBlogLogin
dtrupenn / PennApps

Watch
 
Fork
 1  1
Code
Network
Pull Requests 0
Issues 0
Stats & Graphs
Pennapps Spring 2012 App
ZIP
HTTP
Git Read-Only
 Read-Only access
Current branch: 
master
Files Commits Branches 1 Tags  Downloads
Latest commit to the master branch
y am i alive
commit 1d505f7d5d
 dtrupenn authored 12 minutes ago
PennApps / SpotMe / src / com / pennapps / spotme / checkinsRequestListener.java  
name	age	history message
..		
	SpotMeActivity.java	just now	y am i alive [dtrupenn]
	checkinsRequestListener.java	just now	some working ish [dtrupenn]
	idRequestListener.java	just now	y am i alive [dtrupenn]
	meRequestListener.java	just now	y am i alive [dtrupenn]
	musicRequestListener.java	just now	it is 2 in the morning, shit is starting to get boring [dtrupenn]
Edit this file
100644 113 lines (100 sloc) 3.237 kb rawblamehistory
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
package com.pennapps.spotme;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.net.MalformedURLException;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.util.Log;

import com.facebook.android.FacebookError;
import com.facebook.android.AsyncFacebookRunner.RequestListener;

public class checkinsRequestListener implements RequestListener{
	InputStream is = null;
	StringBuilder sb = null;
	String result = null;

	public void onComplete(String response, Object state) {
		// TODO Auto-generated method stub
		try {
			JSONObject json = new JSONObject(response);
			JSONArray son = json.getJSONArray("data");
			json = son.getJSONObject(0);
			String stime = json.getString("start_time");
			String etime = json.getString("end_time");

			json = json.getJSONObject("data");
			json = json.getJSONObject("song");
			String id = json.getString("id");
			Log.e("log_tag", id);
		} catch (JSONException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
//		//http post
//		
//				try{
//		
//					HttpClient httpclient = new DefaultHttpClient();
//					HttpPost httppost = new HttpPost("http://158.130.107.37:80");
//					httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));
//					HttpResponse reply = httpclient.execute(httppost);
//					HttpEntity entity = reply.getEntity();
//					is = entity.getContent();
//				}
//				catch(Exception e){
//					Log.e("log_tag", "Error in http connection"+e.toString());
//				}
//				//convert response to string
//		
//				try{
//					BufferedReader reader = new BufferedReader(new InputStreamReader(is,"iso-8859-1"),8);
//					sb = new StringBuilder();
//					sb.append(reader.readLine() + "\n");
//					String line="0";
//					while ((line = reader.readLine()) != null) {
//						sb.append(line + "\n");
//					}
//					is.close();
//					result=sb.toString();
//		
//				}
//				catch(Exception e){
//					Log.e("log_tag", "Error converting result "+e.toString());
//				}
//		
//				//paring data		
//				int fd_id;		
//				String fd_name;	
//				try{	
//					JSONArray jArray = new JSONArray(result);
//					JSONObject json_data=null;
//					for(int i=0;i<jArray.length();i++){
//						json_data = jArray.getJSONObject(i);
//						fd_id=json_data.getInt("FOOD_ID");
//						fd_name=json_data.getString("FOOD_NAME");
//					}
//		
//				}
//				catch(JSONException e1){
//					Toast.makeText(getBaseContext(), "No Food Found", Toast.LENGTH_LONG).show();
//				}
//				catch (ParseException e1){
//					e1.printStackTrace();
//				}
	}

	public void onIOException(IOException e, Object state) {
		// TODO Auto-generated method stub
		Log.e("log_tag", "We f***ed up!\n" + e.toString());
	}

	public void onFileNotFoundException(FileNotFoundException e, Object state) {
		// TODO Auto-generated method stub
		Log.e("log_tag", "They F***ED up!!!");
	}

	public void onMalformedURLException(MalformedURLException e, Object state) {
		// TODO Auto-generated method stub
		Log.e("log_tag", "Can't spell for shit");
	}

	public void onFacebookError(FacebookError e, Object state) {
		// TODO Auto-generated method stub
		Log.e("log_tag","F*** this");
	}

}


GitHub Links
GitHub
About
Blog
Features
Contact & Support
Training
GitHub Enterprise
Site Status
Tools
Gauges: Analyze web traffic
Speaker Deck: Presentations
Gist: Code snippets
GitHub for Mac
Issues for iPhone
Job Board
Extras
GitHub Shop
The Octodex
Documentation
GitHub Help
Developer API
GitHub Flavored Markdown
GitHub Pages
Terms of ServicePrivacySecurity© 2012 GitHub Inc. All rights reserved.Powered by the Dedicated Servers and
Cloud Computing of Rackspace Hosting®
 Something went wrong with that request. Please try again. Dismiss