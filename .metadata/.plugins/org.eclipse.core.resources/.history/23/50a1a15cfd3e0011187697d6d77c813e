package com.pennapps.spotme;

import android.service.*;
import android.util.Log;
import android.widget.Toast;
import android.app.*;
import android.content.*;
import android.location.*;
import android.os.*;


public class SpotMeService extends Service{
	private NotificationManager nm;
	
	private int NOTIFICATION = "StopMe notification";
	
	public class LocalBinder extends Binder{
		 SpotMeService getService(){
			return SpotMeService.this;
		}
	}

	@Override
	public void onCreate(){
		nm = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
		showNotification();
	}
	
	@Override
    public int onStartCommand(Intent intent, int flags, int startId) {
        Log.i("LocalService", "Received start id " + startId + ": " + intent);
        // We want this service to continue running until it is explicitly
        // stopped, so return sticky.
        return START_STICKY;
    }

    @Override
    public void onDestroy() {
        // Cancel the persistent notification.
        nm.cancel(NOTIFICATION);

        // Tell the user we stopped.
        Toast.makeText(this, "StopMe stopped" , Toast.LENGTH_SHORT).show();
    }

    @Override
    public IBinder onBind(Intent intent) {
        return mBinder;
    }

    // This is the object that receives interactions from clients.  See
    // RemoteService for a more complete example.
    private final IBinder mBinder = new LocalBinder();

    /**
     * Show a notification while this service is running.
     */
    private void showNotification() {
        // In this sample, we'll use the same text for the ticker and the expanded notification
        CharSequence text = "SpotMe started";

        // Set the icon, scrolling text and timestamp
        Notification notification = new Notification(R.drawable.ic_launcher, text,
                System.currentTimeMillis());

        // The PendingIntent to launch our activity if the user selects this notification
        PendingIntent contentIntent = PendingIntent.getActivity(this, 0,
                new Intent(this, Settings.class), 0);

        // Set the info for the views that show in the notification panel.
        notification.setLatestEventInfo(this, "SpotMe activity",
                       text, contentIntent);

        // Send the notification.
        nm.notify(NOTIFICATION, notification);
    }
	
}